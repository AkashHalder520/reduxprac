{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../Helper/Helper\";\nconst initialState = {\n  status: \"idle\",\n  oo: [{}]\n};\nexport const productcreate = createAsyncThunk(\"product-create\", async formData => {\n  let res = await axiosInstance.post(`product/create`, formData);\n  let resData = res === null || res === void 0 ? void 0 : res.data;\n  return resData;\n});\nexport const productdisplay = createAsyncThunk(\"displayproduct\", async () => {\n  let res = await axiosInstance.post(`product/list`);\n  let resData = res === null || res === void 0 ? void 0 : res.data;\n  return resData;\n});\nexport const productdelete = createAsyncThunk(\"delete_product\", async id => {\n  console.log(\"productid=\", id);\n  let res = await axiosInstance.post(`product/remove/`, id);\n  let resData = res === null || res === void 0 ? void 0 : res.data;\n  return resData;\n});\nexport const productdetails = createAsyncThunk(\"product_details\", async _ref => {\n  let {\n    id\n  } = _ref;\n  console.log(\"productid=\", id);\n  let res = await axiosInstance.get(`product/detail/${id}`);\n  let resData = res === null || res === void 0 ? void 0 : res.data;\n  return resData;\n});\nexport const productupdate = createAsyncThunk(\"product_update\", async formData => {\n  let res = axiosInstance.post(`product/update`, formData);\n  let resData = res === null || res === void 0 ? void 0 : res.data;\n  return resData;\n});\nexport const CrudSlice = createSlice({\n  name: \"crud_product\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(productcreate.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(productcreate.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n    }).addCase(productcreate.rejected, (state, action) => {\n      state.status = \"rejected\";\n    }).addCase(productdisplay.pending, (state, action) => {\n      state.status = \"loading\";\n      console.log('pending');\n    }).addCase(productdisplay.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      console.log(action.payload);\n      state.data = action.payload;\n    }).addCase(productdisplay.rejected, (state, action) => {\n      state.status = \"rejected\";\n      console.log('rjected');\n    }).addCase(productdelete.pending, (state, action) => {\n      state.status = \"loading\";\n      console.log('pending');\n    }).addCase(productdelete.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      // console.log(action.payload);\n      // state.data = action.payload\n    }).addCase(productdelete.rejected, (state, action) => {\n      state.status = \"rejected\";\n      console.log('rjected');\n    }).addCase(productdetails.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(productdetails.fulfilled, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.status = \"fulfilled\";\n      // console.log(action.payload);\n      state.oo = payload.data;\n    }).addCase(productdetails.rejected, (state, action) => {\n      state.status = \"rejected\";\n    }).addCase(productupdate.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(productupdate.fulfilled, (state, action) => {\n      state.status = \"fulfilled\";\n      // console.log(action.payload);\n      // state.data=action.payload\n    }).addCase(productupdate.rejected, (state, action) => {\n      state.status = \"rejected\";\n    });\n  }\n});\nexport const {} = CrudSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axiosInstance","initialState","status","oo","productcreate","formData","res","post","resData","data","productdisplay","productdelete","id","console","log","productdetails","_ref","get","productupdate","CrudSlice","name","extraReducers","builder","addCase","pending","state","action","fulfilled","rejected","payload","_ref2","actions"],"sources":["/home/webskitters/Desktop/project/reduxprac/src/Redux/Crudslice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axiosInstance from \"../Helper/Helper\";\n\nconst initialState = {\n  status: \"idle\",\n  oo: [{}],\n};\nexport const productcreate = createAsyncThunk(\n  \"product-create\",\n\n  async (formData) => {\n    let res = await axiosInstance.post(`product/create`, formData);\n\n    let resData = res?.data;\n\n    return resData;\n  }\n);\nexport const productdisplay = createAsyncThunk(\n  \"displayproduct\",\n\n  async () => {\n    let res = await axiosInstance.post(`product/list`);\n\n    let resData = res?.data;\n\n    return resData;\n  }\n);\nexport const productdelete=createAsyncThunk(\n  \"delete_product\",\n   \n  async(id)=>{\n    console.log(\"productid=\",id);\n    let res= await axiosInstance.post(`product/remove/`,id);\n    let resData= res?.data\n    return resData\n   }  \n)\n\nexport const productdetails=createAsyncThunk(\n  \"product_details\",\n   \n  async({id})=>{\n    console.log(\"productid=\",id);\n    let res= await axiosInstance.get(`product/detail/${id}`);\n    let resData= res?.data\n    return resData\n   }  \n)\nexport const productupdate=createAsyncThunk(\n  \"product_update\",\n  async(formData)=>{\n    let res=axiosInstance.post(`product/update`,formData)\n    let resData=res?.data\n    return resData\n  }\n)\n\n\nexport const CrudSlice = createSlice({\n  name: \"crud_product\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(productcreate.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(productcreate.fulfilled, (state, action) => {\n        state.status = \"fulfilled\";\n      })\n      .addCase(productcreate.rejected, (state, action) => {\n        state.status = \"rejected\";\n      })\n\n      .addCase(productdisplay.pending, (state, action) => {\n        state.status = \"loading\";\n        console.log('pending');\n      })\n      .addCase(productdisplay.fulfilled, (state, action) => {\n        state.status = \"fulfilled\";\n        console.log(action.payload);\n        state.data = action.payload\n      })\n      .addCase(productdisplay.rejected, (state, action) => {\n        state.status = \"rejected\";\n        console.log('rjected');\n      })\n\n      .addCase(productdelete.pending, (state, action) => {\n        state.status = \"loading\";\n        console.log('pending');\n      })\n      .addCase(productdelete.fulfilled, (state, action) => {\n        state.status = \"fulfilled\";\n        // console.log(action.payload);\n        // state.data = action.payload\n      })\n      .addCase(productdelete.rejected, (state, action) => {\n        state.status = \"rejected\";\n        console.log('rjected');\n      })\n\n      .addCase(productdetails.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(productdetails.fulfilled, (state,{payload}) => {\n        state.status = \"fulfilled\";\n        // console.log(action.payload);\n        state.oo=payload.data\n      })\n      .addCase(productdetails.rejected, (state, action) => {\n        state.status = \"rejected\";\n      })\n\n      .addCase(productupdate.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(productupdate.fulfilled, (state, action) => {\n        state.status = \"fulfilled\";\n        // console.log(action.payload);\n        // state.data=action.payload\n      })\n      .addCase(productupdate.rejected, (state, action) => {\n        state.status = \"rejected\";\n      })\n\n  },\n});\nexport const {} = CrudSlice.actions;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,EAAE,EAAE,CAAC,CAAC,CAAC;AACT,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CAC3C,gBAAgB,EAEhB,MAAOO,QAAQ,IAAK;EAClB,IAAIC,GAAG,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAE,gBAAe,EAAEF,QAAQ,CAAC;EAE9D,IAAIG,OAAO,GAAGF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI;EAEvB,OAAOD,OAAO;AAChB,CACF,CAAC;AACD,OAAO,MAAME,cAAc,GAAGZ,gBAAgB,CAC5C,gBAAgB,EAEhB,YAAY;EACV,IAAIQ,GAAG,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAE,cAAa,CAAC;EAElD,IAAIC,OAAO,GAAGF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI;EAEvB,OAAOD,OAAO;AAChB,CACF,CAAC;AACD,OAAO,MAAMG,aAAa,GAACb,gBAAgB,CACzC,gBAAgB,EAEhB,MAAMc,EAAE,IAAG;EACTC,OAAO,CAACC,GAAG,CAAC,YAAY,EAACF,EAAE,CAAC;EAC5B,IAAIN,GAAG,GAAE,MAAMN,aAAa,CAACO,IAAI,CAAE,iBAAgB,EAACK,EAAE,CAAC;EACvD,IAAIJ,OAAO,GAAEF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI;EACtB,OAAOD,OAAO;AACf,CACH,CAAC;AAED,OAAO,MAAMO,cAAc,GAACjB,gBAAgB,CAC1C,iBAAiB,EAEjB,MAAAkB,IAAA,IAAa;EAAA,IAAP;IAACJ;EAAE,CAAC,GAAAI,IAAA;EACRH,OAAO,CAACC,GAAG,CAAC,YAAY,EAACF,EAAE,CAAC;EAC5B,IAAIN,GAAG,GAAE,MAAMN,aAAa,CAACiB,GAAG,CAAE,kBAAiBL,EAAG,EAAC,CAAC;EACxD,IAAIJ,OAAO,GAAEF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI;EACtB,OAAOD,OAAO;AACf,CACH,CAAC;AACD,OAAO,MAAMU,aAAa,GAACpB,gBAAgB,CACzC,gBAAgB,EAChB,MAAMO,QAAQ,IAAG;EACf,IAAIC,GAAG,GAACN,aAAa,CAACO,IAAI,CAAE,gBAAe,EAACF,QAAQ,CAAC;EACrD,IAAIG,OAAO,GAACF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,IAAI;EACrB,OAAOD,OAAO;AAChB,CACF,CAAC;AAGD,OAAO,MAAMW,SAAS,GAAGpB,WAAW,CAAC;EACnCqB,IAAI,EAAE,cAAc;EACpBnB,YAAY;EACZoB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,aAAa,CAACoB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACvB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDqB,OAAO,CAACnB,aAAa,CAACuB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACvB,MAAM,GAAG,WAAW;IAC5B,CAAC,CAAC,CACDqB,OAAO,CAACnB,aAAa,CAACwB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACvB,MAAM,GAAG,UAAU;IAC3B,CAAC,CAAC,CAEDqB,OAAO,CAACb,cAAc,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACvB,MAAM,GAAG,SAAS;MACxBW,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CACDS,OAAO,CAACb,cAAc,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACvB,MAAM,GAAG,WAAW;MAC1BW,OAAO,CAACC,GAAG,CAACY,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAAChB,IAAI,GAAGiB,MAAM,CAACG,OAAO;IAC7B,CAAC,CAAC,CACDN,OAAO,CAACb,cAAc,CAACkB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACvB,MAAM,GAAG,UAAU;MACzBW,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CAEDS,OAAO,CAACZ,aAAa,CAACa,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACvB,MAAM,GAAG,SAAS;MACxBW,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CACDS,OAAO,CAACZ,aAAa,CAACgB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACvB,MAAM,GAAG,WAAW;MAC1B;MACA;IACF,CAAC,CAAC,CACDqB,OAAO,CAACZ,aAAa,CAACiB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACvB,MAAM,GAAG,UAAU;MACzBW,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CAEDS,OAAO,CAACR,cAAc,CAACS,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACvB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDqB,OAAO,CAACR,cAAc,CAACY,SAAS,EAAE,CAACF,KAAK,EAAAK,KAAA,KAAe;MAAA,IAAd;QAACD;MAAO,CAAC,GAAAC,KAAA;MACjDL,KAAK,CAACvB,MAAM,GAAG,WAAW;MAC1B;MACAuB,KAAK,CAACtB,EAAE,GAAC0B,OAAO,CAACpB,IAAI;IACvB,CAAC,CAAC,CACDc,OAAO,CAACR,cAAc,CAACa,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACvB,MAAM,GAAG,UAAU;IAC3B,CAAC,CAAC,CAEDqB,OAAO,CAACL,aAAa,CAACM,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACvB,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDqB,OAAO,CAACL,aAAa,CAACS,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACvB,MAAM,GAAG,WAAW;MAC1B;MACA;IACF,CAAC,CAAC,CACDqB,OAAO,CAACL,aAAa,CAACU,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACvB,MAAM,GAAG,UAAU;IAC3B,CAAC,CAAC;EAEN;AACF,CAAC,CAAC;AACF,OAAO,MAAM,CAAC,CAAC,GAAGiB,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}